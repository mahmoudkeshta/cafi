import 'package:flutter/material.dart';import 'package:coffee_app/core/app_export.dart';import 'package:coffee_app/core/utils/validation_functions.dart';import 'package:coffee_app/widgets/app_bar/appbar_leading_image.dart';import 'package:coffee_app/widgets/app_bar/appbar_subtitle_two.dart';import 'package:coffee_app/widgets/app_bar/custom_app_bar.dart';import 'package:coffee_app/widgets/custom_elevated_button.dart';import 'package:coffee_app/widgets/custom_text_form_field.dart';import 'controller/change_password_one_controller.dart';
// ignore_for_file: must_be_immutable
class ChangePasswordOneScreen extends GetWidget<ChangePasswordOneController> {ChangePasswordOneScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(), body: SizedBox(width: SizeUtils.width, child: SingleChildScrollView(padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom), child: Form(key: _formKey, child: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 24.h, vertical: 17.v), child: Column(children: [SizedBox(height: 31.v), _buildPassword1(), SizedBox(height: 48.v), _buildNewpassword1(), SizedBox(height: 48.v), _buildNewpassword3(), Spacer(), Text("msg_forgot_password".tr, style: CustomTextStyles.titleLargeIndigoA700)]))))), bottomNavigationBar: _buildUpdate())); } 
/// Section Widget
PreferredSizeWidget _buildAppBar() { return CustomAppBar(leadingWidth: 51.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrowLeftOnprimary, margin: EdgeInsets.only(left: 24.h, top: 67.v, bottom: 19.v), onTap: () {onTapArrowLeft();}), centerTitle: true, title: AppbarSubtitleTwo(text: "lbl_change_password".tr, margin: EdgeInsets.only(top: 62.v, bottom: 7.v)), styleType: Style.bgShadow); } 
/// Section Widget
Widget _buildPassword() { return Expanded(child: Padding(padding: EdgeInsets.only(left: 23.h), child: Obx(() => CustomTextFormField(controller: controller.passwordController, hintText: "msg_current_password".tr, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {controller.isShowPassword.value = !controller.isShowPassword.value;}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 1.v, 8.h, 6.v), child: CustomImageView(imagePath: ImageConstant.imgEye, height: 30.adaptSize, width: 30.adaptSize))), suffixConstraints: BoxConstraints(maxHeight: 36.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: controller.isShowPassword.value, borderDecoration: TextFormFieldStyleHelper.underLineBlack2)))); } 
/// Section Widget
Widget _buildPassword1() { return Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgImage47, height: 29.adaptSize, width: 29.adaptSize, margin: EdgeInsets.only(bottom: 7.v)), _buildPassword()]); } 
/// Section Widget
Widget _buildNewpassword() { return Expanded(child: Padding(padding: EdgeInsets.only(left: 23.h), child: Obx(() => CustomTextFormField(controller: controller.newpasswordController, hintText: "lbl_new_password".tr, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {controller.isShowPassword1.value = !controller.isShowPassword1.value;}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 1.v, 8.h, 6.v), child: CustomImageView(imagePath: ImageConstant.imgEye, height: 30.adaptSize, width: 30.adaptSize))), suffixConstraints: BoxConstraints(maxHeight: 36.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: controller.isShowPassword1.value, borderDecoration: TextFormFieldStyleHelper.underLineBlack2)))); } 
/// Section Widget
Widget _buildNewpassword1() { return Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgImage47, height: 29.adaptSize, width: 29.adaptSize, margin: EdgeInsets.only(bottom: 7.v)), _buildNewpassword()]); } 
/// Section Widget
Widget _buildNewpassword2() { return Expanded(child: Padding(padding: EdgeInsets.only(left: 23.h), child: Obx(() => CustomTextFormField(controller: controller.newpasswordController1, hintText: "msg_comfirm_new_password".tr, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {controller.isShowPassword2.value = !controller.isShowPassword2.value;}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 1.v, 8.h, 6.v), child: CustomImageView(imagePath: ImageConstant.imgEye, height: 30.adaptSize, width: 30.adaptSize))), suffixConstraints: BoxConstraints(maxHeight: 36.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: controller.isShowPassword2.value, borderDecoration: TextFormFieldStyleHelper.underLineBlack2)))); } 
/// Section Widget
Widget _buildNewpassword3() { return Row(mainAxisAlignment: MainAxisAlignment.center, children: [Container(height: 37.v, width: 29.h, margin: EdgeInsets.only(top: 1.v), child: Stack(alignment: Alignment.bottomRight, children: [CustomImageView(imagePath: ImageConstant.imgImage47, height: 29.adaptSize, width: 29.adaptSize, alignment: Alignment.topCenter), Align(alignment: Alignment.bottomRight, child: Container(height: 14.adaptSize, width: 14.adaptSize, padding: EdgeInsets.symmetric(horizontal: 3.h, vertical: 4.v), decoration: AppDecoration.fillBlack900.copyWith(borderRadius: BorderRadiusStyle.circleBorder7), child: CustomImageView(imagePath: ImageConstant.imgVector2Black900, height: 5.v, width: 6.h, alignment: Alignment.bottomRight)))])), _buildNewpassword2()]); } 
/// Section Widget
Widget _buildUpdate() { return CustomElevatedButton(text: "lbl_update".tr, margin: EdgeInsets.only(left: 24.h, right: 24.h, bottom: 34.v)); } 

/// Navigates to the previous screen.
onTapArrowLeft() { Get.back(); } 
 }
